[{"/Users/gszm/anime_wiki/client/src/index.js":"1","/Users/gszm/anime_wiki/client/src/reportWebVitals.js":"2","/Users/gszm/anime_wiki/client/src/App.jsx":"3","/Users/gszm/anime_wiki/client/src/context/AnimeContext.js":"4","/Users/gszm/anime_wiki/client/src/context/GenreContext.js":"5","/Users/gszm/anime_wiki/client/src/routes/NewGenre.jsx":"6","/Users/gszm/anime_wiki/client/src/routes/LoginPage.jsx":"7","/Users/gszm/anime_wiki/client/src/routes/AnimeDetailPage.jsx":"8","/Users/gszm/anime_wiki/client/src/routes/Home.jsx":"9","/Users/gszm/anime_wiki/client/src/routes/RegistrationPage.jsx":"10","/Users/gszm/anime_wiki/client/src/routes/NewAnime.jsx":"11","/Users/gszm/anime_wiki/client/src/routes/UpdatePage.jsx":"12","/Users/gszm/anime_wiki/client/src/routes/UpdateGenre.jsx":"13","/Users/gszm/anime_wiki/client/src/routes/AllAnimeList.jsx":"14","/Users/gszm/anime_wiki/client/src/routes/ErrorPage.jsx":"15","/Users/gszm/anime_wiki/client/src/routes/GenrePage.jsx":"16","/Users/gszm/anime_wiki/client/src/components/Header.jsx":"17","/Users/gszm/anime_wiki/client/src/components/ShowPage.jsx":"18","/Users/gszm/anime_wiki/client/src/components/NavBar.jsx":"19","/Users/gszm/anime_wiki/client/src/components/GenreList.jsx":"20","/Users/gszm/anime_wiki/client/src/components/AddGenre.jsx":"21","/Users/gszm/anime_wiki/client/src/components/AddAnime.jsx":"22","/Users/gszm/anime_wiki/client/src/components/UpdateAnime.jsx":"23","/Users/gszm/anime_wiki/client/src/components/Register.jsx":"24","/Users/gszm/anime_wiki/client/src/components/Login.jsx":"25","/Users/gszm/anime_wiki/client/src/components/AnimeList.jsx":"26","/Users/gszm/anime_wiki/client/src/components/UpdateGenre.jsx":"27","/Users/gszm/anime_wiki/client/src/components/ErrorPage.jsx":"28","/Users/gszm/anime_wiki/client/src/components/AllAnimeInGivenGenre.jsx":"29","/Users/gszm/anime_wiki/client/src/components/MyLoader.js":"30","/Users/gszm/anime_wiki/client/src/apis/AnimeFinder.js":"31","/Users/gszm/anime_wiki/client/src/context/UserContext.js":"32","/Users/gszm/anime_wiki/client/src/components/SearchBar.jsx":"33"},{"size":423,"mtime":1667951812643,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1659043088039,"results":"36","hashOfConfig":"35"},{"size":2381,"mtime":1672431060604,"results":"37","hashOfConfig":"35"},{"size":551,"mtime":1665782058723,"results":"38","hashOfConfig":"35"},{"size":565,"mtime":1666388039779,"results":"39","hashOfConfig":"35"},{"size":304,"mtime":1659476903102,"results":"40","hashOfConfig":"35"},{"size":298,"mtime":1667597534586,"results":"41","hashOfConfig":"35"},{"size":343,"mtime":1660058405459,"results":"42","hashOfConfig":"35"},{"size":348,"mtime":1675719588273,"results":"43","hashOfConfig":"35"},{"size":321,"mtime":1667597484278,"results":"44","hashOfConfig":"35"},{"size":304,"mtime":1659421461950,"results":"45","hashOfConfig":"35"},{"size":307,"mtime":1659419529560,"results":"46","hashOfConfig":"35"},{"size":307,"mtime":1666388513914,"results":"47","hashOfConfig":"35"},{"size":315,"mtime":1660259344981,"results":"48","hashOfConfig":"35"},{"size":299,"mtime":1663624916008,"results":"49","hashOfConfig":"35"},{"size":332,"mtime":1660058402686,"results":"50","hashOfConfig":"35"},{"size":440,"mtime":1675718308152,"results":"51","hashOfConfig":"35"},{"size":2708,"mtime":1675719737966,"results":"52","hashOfConfig":"35"},{"size":2166,"mtime":1675727293670,"results":"53","hashOfConfig":"35"},{"size":4037,"mtime":1675719577152,"results":"54","hashOfConfig":"35"},{"size":12230,"mtime":1667602882946,"results":"55","hashOfConfig":"35"},{"size":10215,"mtime":1668038955928,"results":"56","hashOfConfig":"35"},{"size":7134,"mtime":1666388950527,"results":"57","hashOfConfig":"35"},{"size":4069,"mtime":1667603263214,"results":"58","hashOfConfig":"35"},{"size":2418,"mtime":1667951116705,"results":"59","hashOfConfig":"35"},{"size":4240,"mtime":1675719262919,"results":"60","hashOfConfig":"35"},{"size":3490,"mtime":1666390398055,"results":"61","hashOfConfig":"35"},{"size":241,"mtime":1663624774135,"results":"62","hashOfConfig":"35"},{"size":2772,"mtime":1675719695450,"results":"63","hashOfConfig":"35"},{"size":399,"mtime":1660236743064,"results":"64","hashOfConfig":"35"},{"size":2097,"mtime":1667852906852,"results":"65","hashOfConfig":"35"},{"size":547,"mtime":1667599597050,"results":"66","hashOfConfig":"35"},{"size":1528,"mtime":1675727605718,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kikipm",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gszm/anime_wiki/client/src/index.js",[],[],"/Users/gszm/anime_wiki/client/src/reportWebVitals.js",[],[],[],"/Users/gszm/anime_wiki/client/src/App.jsx",[],[],"/Users/gszm/anime_wiki/client/src/context/AnimeContext.js",[],[],"/Users/gszm/anime_wiki/client/src/context/GenreContext.js",[],[],"/Users/gszm/anime_wiki/client/src/routes/NewGenre.jsx",[],[],"/Users/gszm/anime_wiki/client/src/routes/LoginPage.jsx",[],[],"/Users/gszm/anime_wiki/client/src/routes/AnimeDetailPage.jsx",["175"],[],"import React from \"react\";\nimport Header from \"../components/Header\";\nimport AddAnime from \"../components/AddAnime\";\nimport ShowPage from \"../components/ShowPage\";\nimport NavBar from \"../components/NavBar\";\n\nconst Home = () => {\n  return (\n    <div>\n      <NavBar />\n      <Header />\n      <ShowPage />\n    </div>\n  );\n};\n\nexport default Home;","/Users/gszm/anime_wiki/client/src/routes/Home.jsx",["176"],[],"/Users/gszm/anime_wiki/client/src/routes/RegistrationPage.jsx",[],[],"/Users/gszm/anime_wiki/client/src/routes/NewAnime.jsx",[],[],"/Users/gszm/anime_wiki/client/src/routes/UpdatePage.jsx",[],[],"/Users/gszm/anime_wiki/client/src/routes/UpdateGenre.jsx",[],[],"/Users/gszm/anime_wiki/client/src/routes/AllAnimeList.jsx",[],[],"/Users/gszm/anime_wiki/client/src/routes/ErrorPage.jsx",[],[],"/Users/gszm/anime_wiki/client/src/routes/GenrePage.jsx",[],[],"/Users/gszm/anime_wiki/client/src/components/Header.jsx",[],[],"/Users/gszm/anime_wiki/client/src/components/ShowPage.jsx",["177","178","179"],[],"/Users/gszm/anime_wiki/client/src/components/NavBar.jsx",["180","181","182"],[],"/Users/gszm/anime_wiki/client/src/components/GenreList.jsx",["183","184","185"],[],"import React, { useEffect, useContext, useState } from \"react\";\nimport { getGenreCall, deleteGenreCall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\nimport { useHistory, Link, Redirect } from \"react-router-dom\";\nimport MyLoader from \"./MyLoader\";\n\nconst GenreList = (props) => {\n  const { genres, setGenres } = useContext(GenresContext);\n  const { state, setState } = useState(false);\n  const history = useHistory();\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\",\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n\n  const fetchData = async () => {\n    try {\n      const response = await getGenreCall();\n      setRequestStatus(REQUEST_STATUS.SUCCESS);\n      setGenres(response.data.data.genre);\n      setState(response.data.data);\n    } catch (err) {\n      setRequestStatus(REQUEST_STATUS.FAILURE);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [state]);\n\n  const deleteHandler = async (id) => {\n    try {\n      const response = await deleteGenreCall(id);\n      fetchData();\n    } catch (err) {\n      console.log(err);\n      <Redirect to=\"/error\" />;\n    }\n  };\n\n  const editHandler = (id) => {\n    history.push(`/genre/${id}/update`);\n  };\n\n  if (requestStatus === REQUEST_STATUS.LOADING) return <MyLoader></MyLoader>;\n  if (requestStatus === REQUEST_STATUS.FAILURE) <Redirect to=\"/error\" />;\n\n  return (\n    <div id=\"margin\">\n    {/* <div className=\"list-group\" id=\"margin\"> */}\n      <table className=\"table table-bordered table-striped table-hover table-dark table-sm\" id=\"margin\">\n        <thead>\n          <tr className=\"bg-secondary text-warning\">\n            <th scope=\"col\" className=\"col-md-4-4 text-center border-light\">\n              Name\n            </th>\n            <th scope=\"col\" className=\"col-md-8-8 text-center border-light\">\n              Genre Description\n            </th>\n            <th scope=\"col\" className=\"col-md-8-8 text-center border-light\">\n              Genre Image\n            </th>\n            {localStorage.getItem(\"authenticatedUser\") != null && (\n              <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">\n                Action(s)\n              </th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {genres &&\n            genres.map((genre) => {\n              return (\n                <tr key={genre.id} className=\"table-active\">\n                  <td className=\"col-md-1 align-middle text-center border-light\">\n                    {genre.genre_name}\n                  </td>\n                  <td className=\"col-md-3 align-middle text-center border-light\">\n                    {genre.genre_description}\n                  </td>\n                  <td className=\"col-md-8 text-center border-light\">\n                    <Link to={`/anime/genre/${genre.id}`}>\n                      <img\n                        src={genre.genre_image}\n                        className=\"img-fluid rounded p-1 border border-warning bg-warning w-50\"\n                      ></img>\n                    </Link>\n                  </td>\n                  {localStorage.getItem(\"authenticatedUser\") != null && (\n                    <td className=\"col-md-3 align-middle text-center border-light\">\n                      <div className=\"btn-group-vertical\">\n                        <button\n                          className=\"btn btn-warning\"\n                          onClick={() => editHandler(genre.id)}\n                        >\n                          Edit\n                        </button>\n                        <button\n                          className=\"btn btn-danger\"\n                          onClick={() => deleteHandler(genre.id)}\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </td>\n                  )}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default GenreList;\n",[],"/Users/gszm/anime_wiki/client/src/components/AddGenre.jsx",["186"],[],"import React, { useState, useContext } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { postGenreAPICall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\n\nconst AddGenre = () => {\n  const { addGenres } = useContext(GenresContext);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await postGenreAPICall({\n        genre_name: name,\n        genre_image: image,\n        genre_description: description,\n      });\n      console.log(response.data.data);\n      console.log(response.status);\n      addGenres(response.data.data.genres);\n      if (response.status === 201) {\n        history.push(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n      <Redirect to=\"/error\" />;\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"font-weight-light text-left\">Add an Anime</h3>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <form role=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"image\">Image Link</label>\n              <input\n                type=\"text\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                className=\"form-control\"\n                rows=\"4\"\n                onChange={(e) => setDescription(e.target.value)}\n              ></textarea>\n            </div>\n            <button\n              onClick={handleSubmit}\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Add Genre\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddGenre;\n\n// import React, { useState, useContext, useEffect } from \"react\";\n// import { Redirect, useHistory } from \"react-router-dom\";\n// import AnimeFinder, { getGenreCall, postAnimeAPICall } from \"../apis/AnimeFinder\";\n// import { AnimeContext } from \"../context/AnimeContext\";\n// import { GenresContext } from \"../context/GenreContext\";\n\n// const AddAnime = () => {\n//   const { addAnime } = useContext(AnimeContext);\n//   const [name, setName] = useState(\"\");\n//   const [episodes, setEpisodes] = useState();\n//   const [image, setImage] = useState(\"\");\n//   const [year, setYear] = useState();\n//   const [creator, setCreator] = useState(\"\");\n//   const [genreID, setGenreID] = useState();\n//   const { genres, setGenres } = useContext(GenresContext);\n//   const { state, setState } = useState(false);\n//   const { response, setResponse } = useState();\n//   const history = useHistory()\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await getGenreCall();\n//       console.log(response.data.data);\n//       setGenres(response.data.data.genre);\n//       setState(response.data.data);\n//     } catch (err) {}\n//   };\n//   useEffect(() => {\n//     fetchData();\n//   }, [state]);\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postGenreAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addGenre(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await AnimeFinder.post(\"/\", {\n//       name,\n//       location,\n//       price_range: priceRange,\n//     });\n//     console.log(response.data.data);\n//     addAnime(response.data.data.restaurant);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n//   CREATE TABLE IF NOT EXISTS public.genres\n// (\n//     id bigserial NOT NULL,\n//     genre_name character varying(45),\n//     genre_image text,\n//     genre_description text,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// CREATE TABLE IF NOT EXISTS public.anime\n// (\n//     id bigserial NOT NULL,\n//     name character varying(255),\n//     episodes integer,\n//     image text,\n//     year integer,\n//     creator character varying(255),\n//     genre_id bigint,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postAnimeAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addAnime(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/anime\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n//   return (\n// <div className=\"container-fluid\">\n//   <h3 className=\"font-weight-light text-left\">\n//   Add an Anime\n//   </h3>\n//   <div className=\"row\">\n//     <div className=\"col-md-12\">\n//       <form role=\"form\">\n//         <div className=\"form-group\">\n\n// <label htmlFor=\"name\">\n//             Name\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//             <label htmlFor=\"episodes\">\n//                         Number of Episodes\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={episodes}\n//                       onChange={(e) => setEpisodes(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"image\">\n//                         Image Link\n//                       </label>\n//                       <input\n//                       type=\"text\"\n//                       value={image}\n//                       onChange={(e) => setImage(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"year\">\n//                         Year\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={year}\n//                       onChange={(e) => setYear(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"creator\">\n//             Creator\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={creator}\n//           onChange={(e) => setCreator(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//         </div>\n//                 <div className=\"form-group\">\n//                 <label htmlFor=\"select_genre\">Genre</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id=\"genre\"\n//                   value={genreID}\n//                   onChange={(e) => setGenreID(e.target.value)}\n//                   >\n//                   <option value=\"\" disabled selected hidden>Choose a genre</option>\n//                 {genres &&\n//                   genres.map((genre) => {\n//                   return (\n//                     <option value={genre.id} key={genre.id}>{genre.genre_name}</option>\n//                   );\n//                 })}\n//                 </select>\n//         </div>\n// <div className=\"form-group\">\n// <label htmlFor=\"description\">\n//             Description\n//           </label>\n//           <textarea className=\"form-control\" rows=\"4\"></textarea>\n// </div>\n//         <button\n//         onClick={handleSubmit}\n//         type=\"submit\"\n//         className=\"btn btn-primary\">\n//           Add Anime\n//         </button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n// // /*\n//     <div className=\"mb-2\">\n//         Add Anime Component\n//     <div className=\"mb-2\">\n//         <div className=\"mb-4\">\n//       <form action=\"\">\n//         <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//                <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n\n//     </div>\n//     </div>\n//     */\n//   );\n// };\n\n// export default AddAnime;\n","/Users/gszm/anime_wiki/client/src/components/AddAnime.jsx",["187","188","189","190","191"],[],"/Users/gszm/anime_wiki/client/src/components/UpdateAnime.jsx",["192","193","194","195","196","197","198","199","200","201"],[],"import { useLocation, useParams, useHistory, Redirect } from \"react-router-dom\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { getSingleAnimeCall, editAnimeCall, getGenreCall } from \"../apis/AnimeFinder\";\nimport { AnimeContext } from \"../context/AnimeContext\";\nimport { GenresContext } from \"../context/GenreContext\";\nimport MyLoader from \"./MyLoader\";\n\nconst UpdateAnime = () => {\n  const { id } = useParams();\n  const { anime, setAnime } = useContext(AnimeContext);\n  const { state, setState } = useState(false);\n\n  const { addAnime } = useContext(AnimeContext);\n  const [name, setName] = useState(\"\");\n  const [episodes, setEpisodes] = useState();\n  const [image, setImage] = useState(\"\");\n  const [year, setYear] = useState();\n  const [creator, setCreator] = useState(\"\");\n  const [genreID, setGenreID] = useState();\n  const [genreName, setGenreName] = useState();\n  const { genres, setGenres } = useContext(GenresContext);\n  const { genreResponse, setGenreResponse } = useState();\n  const history = useHistory() \n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\",\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n\n  const delay = () => {\n    return new Promise(resolve => setTimeout(resolve, 1000));\n  };\n\n  const fetchData = async () => {\n    try {\n      await delay();\n      const response = await getSingleAnimeCall(id);\n      setRequestStatus(REQUEST_STATUS.SUCCESS);\n            const genreResponse = await getGenreCall();\n      console.log(genreResponse.data.data);\n      setGenres(genreResponse.data.data.genre);\n      // setState(genreResponse.data.data);\n      console.log(response.data.data.anime);\n      setAnime(response.data.data.anime);\n      setName(response.data.data.anime[0].name)\n      setEpisodes(response.data.data.anime[0].episodes)\n      setImage(response.data.data.anime[0].image)\n      setYear(response.data.data.anime[0].year)\n      setCreator(response.data.data.anime[0].creator)\n      setGenreID(response.data.data.anime[0].genre_id)\n      console.log(genres.filter(genre => genre.id == genreID));\n      setGenreName(genres.filter(genre => genre.id == genreID));\n      // console.log(genreName);\n\n      // setState(response.data.data.anime);\n      // setName(response.data.data.anime[0].name)\n      // setEpisodes(response.data.data.anime[0].episodes)\n      // setImage(response.data.data.anime[0].image)\n      // setYear(response.data.data.anime[0].year)\n      // setCreator(response.data.data.anime[0].creator)\n    } catch (err) {\n      setRequestStatus(REQUEST_STATUS.FAILURE);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [state]);\n\n\n  // const fetchData = async () => {\n  //   try {\n  //     const response = await getGenreCall();\n  //     console.log(response.data.data);\n  //     setGenres(response.data.data.genre);\n  //     setState(response.data.data);\n  //   } catch (err) {}\n  // };\n  // useEffect(() => {\n  //   fetchData();\n  // }, [state]);\n\n//       setAnime(response.data.data.anime);\n// setName(response.data.data.anime[0].name)\n// setEpisodes(response.data.data.anime[0].episodes)\n// setImage(response.data.data.anime[0].image)\n// setYear(response.data.data.anime[0].year)\n// setCreator(response.data.data.anime[0].creator)\n\n\n  if (requestStatus === REQUEST_STATUS.LOADING) return <MyLoader></MyLoader>;\n  if (requestStatus === REQUEST_STATUS.FAILURE) <Redirect to=\"/error\" />;\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await editAnimeCall(id, {\n        name,\n        episodes,\n        image,\n        year,\n        creator,\n        genre_id: genreID,\n      });\n      console.log(response.data.data);\n      console.log(response.status);\n      // addAnime(response.data.data.anime);\n      if(response.status === 200) {\n        history.push(\"/anime\")\n      }\n    } catch (err) {\n      console.log(err);\n      <Redirect to=\"/error\" />\n    }\n  };\n\n\n  return (\n    <div className=\"list-group container\">\n        <div className=\"container-fluid\">\n  <h3 className=\"font-weight-light text-left\">\n  Edit an Anime {anime.name}\n  </h3>\n  <div className=\"row\">\n    <div className=\"col-md-12\">\n      <form role=\"form\">\n        <div className=\"form-group\">\n            \n<label htmlFor=\"name\">\n            Name\n          </label>\n          <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          className=\"form-control\" />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"episodes\">\n                        Number of Episodes\n                      </label>\n                      <input\n                      type=\"number\"\n                      defaultValue={anime.episodes}\n                      value={episodes}\n                      onChange={(e) => setEpisodes(e.target.value)}\n                      className=\"form-control\" />\n                    </div>\n                    <div className=\"form-group\">\n            <label htmlFor=\"image\">\n                        Image Link\n                      </label>\n                      <input\n                      type=\"text\"\n                      value={image}\n                      onChange={(e) => setImage(e.target.value)}\n                      className=\"form-control\" />\n                    </div>\n                    <div className=\"form-group\">\n            <label htmlFor=\"year\">\n                        Year\n                      </label>\n                      <input\n                      type=\"number\"\n                      value={year}\n                      onChange={(e) => setYear(e.target.value)}\n                      className=\"form-control\" />\n                    </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"creator\">\n            Creator\n          </label>\n          <input\n          type=\"text\"\n          value={creator}\n          onChange={(e) => setCreator(e.target.value)}\n          className=\"form-control\" />\n        </div>\n        <div className=\"form-group\">\n        </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"select_genre\">Genre</label>\n                <select\n                  className=\"form-control\"\n                  id=\"genre\"\n                  value={genreID}\n                  onChange={(e) => setGenreID(e.target.value)}\n                  >\n                  \n                {genres &&\n                  genres.map((genre) => {\n                  return (\n                    <>\n                    <option value={genre.id} key={genre.id}>{genre.genre_name}</option>\n                    </>\n                  );\n                })}\n                </select>\n        </div>\n<div className=\"form-group\">\n<label htmlFor=\"description\">\n            Description\n          </label>\n          <textarea className=\"form-control\" rows=\"4\"></textarea>\n</div>\n        <button \n        onClick={handleSubmit}\n        type=\"submit\"\n        className=\"btn btn-primary\">\n          Edit Anime\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n    </div>\n    \n  );\n}\n\nexport default UpdateAnime;\n","/Users/gszm/anime_wiki/client/src/components/Register.jsx",["202","203","204","205","206"],[],"import React, { useState, useContext } from \"react\";\nimport { useLocation, useParams, useHistory, Redirect } from \"react-router-dom\";\nimport { postUserAPICall } from \"../apis/AnimeFinder\";\nimport { UsersContext } from \"../context/UserContext\";\n\nconst Register = () => {\n  const { addUsers } = useContext(UsersContext);\n  const [first, setFirst] = useState(\"\");\n  const [last, setLast] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    // noErrors() = true;\n    e.preventDefault();\n    try {\n      const response = await postUserAPICall({\n        first: first,\n        last: last,\n        username: username,\n        email: email,\n        password: password,\n      });\n      console.log(response.data.data);\n      console.log(response.status);\n      addUsers(response.data.data.users);\n      if (response.status === 201) {\n        history.push(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n      <Redirect to=\"/error\" />;\n    }\n  };\n\n  //ADD VALIDATION FOR THIS AT LATER TIME\n  // const noErrors = (errors) => {\n  //   if () {\n\n  //   }\n  //   return true\n  // }\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"font-weight-light text-left\">Registration Page</h3>\n\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <form role=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"first\">First Name</label>\n              <input\n                type=\"text\"\n                value={first}\n                placeholder=\"First Name\"\n                onChange={(e) => setFirst(e.target.value)}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"last\">Last Name</label>\n              <input\n                type=\"text\"\n                value={last}\n                placeholder=\"Last Name\"\n                onChange={(e) => setLast(e.target.value)}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"creator\">UserName</label>\n              <input\n                type=\"text\"\n                value={username}\n                placeholder=\"Username\"\n                onChange={(e) => setUsername(e.target.value)}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"creator\">Email</label>\n              <input\n                type=\"text\"\n                value={email}\n                placeholder=\"Email\"\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"creator\">Password</label>\n              <input\n                type=\"password\"\n                value={password}\n                autoComplete=\"off\"\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"creator\">Confirm Password</label>\n              <input\n                type=\"password\"\n                value={confirmation}\n                autoComplete=\"off\"\n                placeholder=\"Confirm Password\"\n                onChange={(e) => setConfirmation(e.target.value)}\n                className=\"form-control\"\n              />\n            </div>\n            <button\n              onClick={handleSubmit}\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Create User\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/gszm/anime_wiki/client/src/components/Login.jsx",["207","208","209","210","211"],[],"/Users/gszm/anime_wiki/client/src/components/AnimeList.jsx",["212","213","214","215"],[],"/Users/gszm/anime_wiki/client/src/components/UpdateGenre.jsx",["216","217","218","219","220","221","222","223"],[],"import React, { useState, useContext, useEffect  } from \"react\";\nimport { useLocation, useParams, useHistory, Redirect } from \"react-router-dom\";\nimport { getSingleGenreCall, editGenreCall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\nimport MyLoader from \"./MyLoader\";\n\nconst UpdateGenre = () => {\n  const { id } = useParams();\n  const { genres, setGenres } = useContext(GenresContext);\n  const { addGenres } = useContext(GenresContext);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory() \n  const { state, setState } = useState(false);\n  const { genreResponse, setGenreResponse } = useState();\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\",\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n\n\n  const delay = () => {\n    return new Promise(resolve => setTimeout(resolve, 1000));\n  };\n\n  const fetchData = async () => {\n    try {\n      await delay();\n      const response = await getSingleGenreCall(id);\n      setRequestStatus(REQUEST_STATUS.SUCCESS);\n      setGenres(response.data.data.genre);\n      setName(response.data.data.genre[0].genre_name);\n      setImage(response.data.data.genre[0].genre_image);\n      setDescription(response.data.data.genre[0].genre_description);\n    } catch (err) {\n      setRequestStatus(REQUEST_STATUS.FAILURE);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [state]);\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await editGenreCall(id, {\n        genre_name: name,\n        genre_image: image,\n        genre_description: description,\n      });\n      console.log(response.data.data);\n      console.log(response.status);\n      if(response.status === 200) {\n        history.push(\"/\")\n      }\n    } catch (err) {\n      console.log(err);\n      <Redirect to=\"/error\" />\n    }\n  };\n\nif (requestStatus === REQUEST_STATUS.LOADING) return <MyLoader></MyLoader>;\nif (requestStatus === REQUEST_STATUS.FAILURE) <Redirect to=\"/error\" />;\n\n  return (\n\n<div className=\"container-fluid\">\n  <h3 className=\"font-weight-light text-left\">\n  Edit a Genre\n  </h3>\n  <div className=\"row\">\n    <div className=\"col-md-12\">\n      <form role=\"form\">\n        <div className=\"form-group\">\n            \n<label htmlFor=\"name\">\n            Name\n          </label>\n          <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          className=\"form-control\" />\n        </div>\n                    <div className=\"form-group\">\n            <label htmlFor=\"image\">\n                        Image Link\n                      </label>\n                      <input\n                      type=\"text\"\n                      value={image}\n                      onChange={(e) => setImage(e.target.value)}\n                      className=\"form-control\" />\n                    </div>\n<div className=\"form-group\">\n<label htmlFor=\"description\">\n            Description\n          </label>\n          <textarea value={description} className=\"form-control\" rows=\"4\" onChange={(e) => setDescription(e.target.value)}></textarea>\n</div>\n        <button \n        onClick={handleSubmit}\n        type=\"submit\"\n        className=\"btn btn-primary\">\n          Edit Genre\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n  );\n};\n\nexport default UpdateGenre;","/Users/gszm/anime_wiki/client/src/components/ErrorPage.jsx",[],[],"/Users/gszm/anime_wiki/client/src/components/AllAnimeInGivenGenre.jsx",["224","225","226"],[],"/Users/gszm/anime_wiki/client/src/components/MyLoader.js",[],[],"/Users/gszm/anime_wiki/client/src/apis/AnimeFinder.js",[],[],"/Users/gszm/anime_wiki/client/src/context/UserContext.js",[],[],"/Users/gszm/anime_wiki/client/src/components/SearchBar.jsx",["227","228","229","230","231","232","233","234","235","236","237","238","239"],[],{"ruleId":"240","severity":1,"message":"241","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":16},{"ruleId":"240","severity":1,"message":"244","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":17},{"ruleId":"240","severity":1,"message":"245","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":38,"column":6,"nodeType":"248","endLine":38,"endColumn":13,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":62,"column":69,"nodeType":"252","endLine":62,"endColumn":169},{"ruleId":"240","severity":1,"message":"253","line":6,"column":9,"nodeType":"242","messageId":"243","endLine":6,"endColumn":16},{"ruleId":"240","severity":1,"message":"254","line":8,"column":11,"nodeType":"242","messageId":"243","endLine":8,"endColumn":23},{"ruleId":"240","severity":1,"message":"255","line":11,"column":9,"nodeType":"242","messageId":"243","endLine":11,"endColumn":15},{"ruleId":"246","severity":1,"message":"247","line":30,"column":6,"nodeType":"248","endLine":30,"endColumn":13,"suggestions":"256"},{"ruleId":"240","severity":1,"message":"257","line":34,"column":13,"nodeType":"242","messageId":"243","endLine":34,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":84,"column":23,"nodeType":"252","endLine":87,"endColumn":24},{"ruleId":"258","severity":1,"message":"259","line":38,"column":11,"nodeType":"252","endLine":38,"endColumn":29},{"ruleId":"240","severity":1,"message":"260","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":19},{"ruleId":"240","severity":1,"message":"257","line":25,"column":11,"nodeType":"242","messageId":"243","endLine":25,"endColumn":19},{"ruleId":"240","severity":1,"message":"261","line":25,"column":21,"nodeType":"242","messageId":"243","endLine":25,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":38,"column":6,"nodeType":"248","endLine":38,"endColumn":13,"suggestions":"262"},{"ruleId":"258","severity":1,"message":"259","line":141,"column":11,"nodeType":"252","endLine":141,"endColumn":29},{"ruleId":"240","severity":1,"message":"263","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":21},{"ruleId":"240","severity":1,"message":"264","line":11,"column":18,"nodeType":"242","messageId":"243","endLine":11,"endColumn":26},{"ruleId":"240","severity":1,"message":"265","line":13,"column":11,"nodeType":"242","messageId":"243","endLine":13,"endColumn":19},{"ruleId":"240","severity":1,"message":"266","line":20,"column":10,"nodeType":"242","messageId":"243","endLine":20,"endColumn":19},{"ruleId":"240","severity":1,"message":"267","line":22,"column":11,"nodeType":"242","messageId":"243","endLine":22,"endColumn":24},{"ruleId":"240","severity":1,"message":"268","line":22,"column":26,"nodeType":"242","messageId":"243","endLine":22,"endColumn":42},{"ruleId":"269","severity":1,"message":"270","line":52,"column":51,"nodeType":"271","messageId":"272","endLine":52,"endColumn":53},{"ruleId":"269","severity":1,"message":"270","line":53,"column":52,"nodeType":"271","messageId":"272","endLine":53,"endColumn":54},{"ruleId":"246","severity":1,"message":"247","line":68,"column":6,"nodeType":"248","endLine":68,"endColumn":13,"suggestions":"273"},{"ruleId":"258","severity":1,"message":"259","line":127,"column":7,"nodeType":"252","endLine":127,"endColumn":25},{"ruleId":"240","severity":1,"message":"263","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":21},{"ruleId":"240","severity":1,"message":"274","line":2,"column":23,"nodeType":"242","messageId":"243","endLine":2,"endColumn":32},{"ruleId":"240","severity":1,"message":"275","line":14,"column":10,"nodeType":"242","messageId":"243","endLine":14,"endColumn":16},{"ruleId":"240","severity":1,"message":"276","line":14,"column":18,"nodeType":"242","messageId":"243","endLine":14,"endColumn":27},{"ruleId":"258","severity":1,"message":"259","line":54,"column":11,"nodeType":"252","endLine":54,"endColumn":29},{"ruleId":"240","severity":1,"message":"277","line":11,"column":10,"nodeType":"242","messageId":"243","endLine":11,"endColumn":15},{"ruleId":"240","severity":1,"message":"264","line":11,"column":17,"nodeType":"242","messageId":"243","endLine":11,"endColumn":25},{"ruleId":"240","severity":1,"message":"278","line":17,"column":10,"nodeType":"242","messageId":"243","endLine":17,"endColumn":23},{"ruleId":"240","severity":1,"message":"279","line":17,"column":25,"nodeType":"242","messageId":"243","endLine":17,"endColumn":41},{"ruleId":"258","severity":1,"message":"259","line":47,"column":11,"nodeType":"252","endLine":47,"endColumn":29},{"ruleId":"240","severity":1,"message":"280","line":5,"column":3,"nodeType":"242","messageId":"243","endLine":5,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":33,"column":6,"nodeType":"248","endLine":33,"endColumn":13,"suggestions":"281"},{"ruleId":"240","severity":1,"message":"257","line":37,"column":13,"nodeType":"242","messageId":"243","endLine":37,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":84,"column":23,"nodeType":"252","endLine":87,"endColumn":24},{"ruleId":"240","severity":1,"message":"263","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":21},{"ruleId":"240","severity":1,"message":"282","line":9,"column":11,"nodeType":"242","messageId":"243","endLine":9,"endColumn":17},{"ruleId":"240","severity":1,"message":"283","line":10,"column":11,"nodeType":"242","messageId":"243","endLine":10,"endColumn":20},{"ruleId":"240","severity":1,"message":"264","line":15,"column":18,"nodeType":"242","messageId":"243","endLine":15,"endColumn":26},{"ruleId":"240","severity":1,"message":"267","line":16,"column":11,"nodeType":"242","messageId":"243","endLine":16,"endColumn":24},{"ruleId":"240","severity":1,"message":"268","line":16,"column":26,"nodeType":"242","messageId":"243","endLine":16,"endColumn":42},{"ruleId":"246","severity":1,"message":"247","line":44,"column":6,"nodeType":"248","endLine":44,"endColumn":13,"suggestions":"284"},{"ruleId":"258","severity":1,"message":"259","line":77,"column":7,"nodeType":"252","endLine":77,"endColumn":25},{"ruleId":"240","severity":1,"message":"253","line":10,"column":7,"nodeType":"242","messageId":"243","endLine":10,"endColumn":14},{"ruleId":"246","severity":1,"message":"285","line":30,"column":6,"nodeType":"248","endLine":30,"endColumn":8,"suggestions":"286"},{"ruleId":"250","severity":1,"message":"251","line":55,"column":101,"nodeType":"252","endLine":55,"endColumn":201},{"ruleId":"240","severity":1,"message":"287","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"288","line":1,"column":28,"nodeType":"242","messageId":"243","endLine":1,"endColumn":38},{"ruleId":"240","severity":1,"message":"289","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":25},{"ruleId":"240","severity":1,"message":"290","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":22},{"ruleId":"240","severity":1,"message":"291","line":4,"column":33,"nodeType":"242","messageId":"243","endLine":4,"endColumn":41},{"ruleId":"240","severity":1,"message":"292","line":4,"column":43,"nodeType":"242","messageId":"243","endLine":4,"endColumn":47},{"ruleId":"240","severity":1,"message":"293","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":16},{"ruleId":"240","severity":1,"message":"294","line":8,"column":13,"nodeType":"242","messageId":"243","endLine":8,"endColumn":15},{"ruleId":"240","severity":1,"message":"295","line":9,"column":11,"nodeType":"242","messageId":"243","endLine":9,"endColumn":17},{"ruleId":"240","severity":1,"message":"296","line":9,"column":19,"nodeType":"242","messageId":"243","endLine":9,"endColumn":28},{"ruleId":"240","severity":1,"message":"253","line":10,"column":7,"nodeType":"242","messageId":"243","endLine":10,"endColumn":14},{"ruleId":"240","severity":1,"message":"278","line":16,"column":10,"nodeType":"242","messageId":"243","endLine":16,"endColumn":23},{"ruleId":"240","severity":1,"message":"279","line":16,"column":25,"nodeType":"242","messageId":"243","endLine":16,"endColumn":41},"no-unused-vars","'AddAnime' is defined but never used.","Identifier","unusedVar","'AnimeList' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["297"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'history' is assigned a value but never used.","'loggedInUser' is assigned a value but never used.","'logout' is assigned a value but never used.",["298"],"'response' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'AnimeFinder' is defined but never used.","'setResponse' is assigned a value but never used.",["299"],"'useLocation' is defined but never used.","'setState' is assigned a value but never used.","'addAnime' is assigned a value but never used.","'genreName' is assigned a value but never used.","'genreResponse' is assigned a value but never used.","'setGenreResponse' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["300"],"'useParams' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'state' is assigned a value but never used.","'requestStatus' is assigned a value but never used.","'setRequestStatus' is assigned a value but never used.","'editAnimeCall' is defined but never used.",["301"],"'genres' is assigned a value but never used.","'addGenres' is assigned a value but never used.",["302"],"React Hook useEffect has missing dependencies: 'REQUEST_STATUS.FAILURE', 'REQUEST_STATUS.SUCCESS', 'id', and 'setAnime'. Either include them or remove the dependency array.",["303"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","'getAnimeInGenre' is defined but never used.","'AnimeContext' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'MyLoader' is defined but never used.","'id' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.",{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},{"desc":"304","fix":"307"},{"desc":"304","fix":"308"},{"desc":"304","fix":"309"},{"desc":"304","fix":"310"},{"desc":"311","fix":"312"},"Update the dependencies array to be: [fetchData, state]",{"range":"313","text":"314"},{"range":"315","text":"314"},{"range":"316","text":"314"},{"range":"317","text":"314"},{"range":"318","text":"314"},{"range":"319","text":"314"},"Update the dependencies array to be: [REQUEST_STATUS.FAILURE, REQUEST_STATUS.SUCCESS, id, setAnime]",{"range":"320","text":"321"},[1140,1147],"[fetchData, state]",[978,985],[1391,1398],[2676,2683],[990,997],[1540,1547],[992,994],"[REQUEST_STATUS.FAILURE, REQUEST_STATUS.SUCCESS, id, setAnime]"]