{"ast":null,"code":"var _jsxFileName = \"/Users/gszm/anime_wiki/client/src/components/GenreList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { getGenreCall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenreList = props => {\n  _s();\n\n  const {\n    genres,\n    setGenres\n  } = useContext(GenresContext);\n  const {\n    state,\n    setState\n  } = useState(false);\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\"\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n\n  const fetchData = async () => {\n    try {\n      const response = await getGenreCall();\n      setRequestStatus(REQUEST_STATUS.SUCCESS);\n      console.log(response.data.data);\n      setGenres(response.data.data.genre);\n      setState(response.data.data);\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"list-group container\",\n    children: [\"Genre List Component\", /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-bordered table-striped table-hover table-dark table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-secondary text-warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            class: \"col-md-4-4 text-center border-light\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            class: \"col-md-8-8 text-center border-light\",\n            children: \"Genre Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: genres && genres.map(genre => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            class: \"table-active\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"col-md-2 align-middle text-center border-light\",\n              children: genre.genre_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"col-md-10 text-center border-light\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/anime/genre/${genre.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: genre.genre_image,\n                  class: \"img-fluid rounded p-1 border border-warning bg-warning w-50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 104\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)]\n          }, genre.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GenreList, \"zdSDdRPkblBGM/mRFCPMa3QGl3A=\");\n\n_c = GenreList;\nexport default GenreList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreList\");","map":{"version":3,"names":["React","useEffect","useContext","useState","getGenreCall","GenresContext","useHistory","Link","GenreList","props","genres","setGenres","state","setState","REQUEST_STATUS","LOADING","SUCCESS","FAILURE","requestStatus","setRequestStatus","fetchData","response","console","log","data","genre","err","map","genre_name","id","genre_image"],"sources":["/Users/gszm/anime_wiki/client/src/components/GenreList.jsx"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { getGenreCall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst GenreList = (props) => {\n  const { genres, setGenres } = useContext(GenresContext);\n  const { state, setState } = useState(false);\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\",\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n\n  const fetchData = async () => {\n    try {\n      const response = await getGenreCall();\n      setRequestStatus(REQUEST_STATUS.SUCCESS);\n      console.log(response.data.data);\n      setGenres(response.data.data.genre);\n      setState(response.data.data);\n    } catch (err) {}\n  };\n  useEffect(() => {\n    fetchData();\n  }, [state]);\n\n  return (\n    <div class=\"list-group container\">\n        Genre List Component\n        <table class=\"table table-bordered table-striped table-hover table-dark table-sm\">\n        <thead>\n          <tr className=\"bg-secondary text-warning\">\n          <th scope=\"col\" class=\"col-md-4-4 text-center border-light\">Name</th>\n            <th scope=\"col\" class=\"col-md-8-8 text-center border-light\">Genre Image</th>\n          </tr>\n        </thead>\n        <tbody>\n          {genres &&\n            genres.map((genre) => {\n              return (\n                <tr\n                  key={genre.id}\n                  class=\"table-active\"\n                >\n                  <td class=\"col-md-2 align-middle text-center border-light\">{genre.genre_name}</td>\n                  <td class=\"col-md-10 text-center border-light\"><Link to={`/anime/genre/${genre.id}`}><img src={genre.genre_image} class=\"img-fluid rounded p-1 border border-warning bg-warning w-50\"></img></Link></td>\n                </tr>\n              );\n            })}\n        </tbody>\n        </table>\n    </div>\n  );\n};\n\nexport default GenreList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAwBT,UAAU,CAACG,aAAD,CAAxC;EACA,MAAM;IAAEO,KAAF;IAASC;EAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;EACA,MAAMW,cAAc,GAAG;IACrBC,OAAO,EAAE,SADY;IAErBC,OAAO,EAAE,SAFY;IAGrBC,OAAO,EAAE;EAHY,CAAvB;EAKA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAACW,cAAc,CAACC,OAAhB,CAAlD;;EAEA,MAAMK,SAAS,GAAG,YAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,YAAY,EAAnC;MACAe,gBAAgB,CAACL,cAAc,CAACE,OAAhB,CAAhB;MACAM,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAA1B;MACAb,SAAS,CAACU,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,KAApB,CAAT;MACAZ,QAAQ,CAACQ,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAR;IACD,CAND,CAME,OAAOE,GAAP,EAAY,CAAE;EACjB,CARD;;EASAzB,SAAS,CAAC,MAAM;IACdmB,SAAS;EACV,CAFQ,EAEN,CAACR,KAAD,CAFM,CAAT;EAIA,oBACE;IAAK,KAAK,EAAC,sBAAX;IAAA,gDAEI;MAAO,KAAK,EAAC,oEAAb;MAAA,wBACA;QAAA,uBACE;UAAI,SAAS,EAAC,2BAAd;UAAA,wBACA;YAAI,KAAK,EAAC,KAAV;YAAgB,KAAK,EAAC,qCAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADA,eAEE;YAAI,KAAK,EAAC,KAAV;YAAgB,KAAK,EAAC,qCAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADA,eAOA;QAAA,UACGF,MAAM,IACLA,MAAM,CAACiB,GAAP,CAAYF,KAAD,IAAW;UACpB,oBACE;YAEE,KAAK,EAAC,cAFR;YAAA,wBAIE;cAAI,KAAK,EAAC,gDAAV;cAAA,UAA4DA,KAAK,CAACG;YAAlE;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAI,KAAK,EAAC,oCAAV;cAAA,uBAA+C,QAAC,IAAD;gBAAM,EAAE,EAAG,gBAAeH,KAAK,CAACI,EAAG,EAAnC;gBAAA,uBAAsC;kBAAK,GAAG,EAAEJ,KAAK,CAACK,WAAhB;kBAA6B,KAAK,EAAC;gBAAnC;kBAAA;kBAAA;kBAAA;gBAAA;cAAtC;gBAAA;gBAAA;gBAAA;cAAA;YAA/C;cAAA;cAAA;cAAA;YAAA,QALF;UAAA,GACOL,KAAK,CAACI,EADb;YAAA;YAAA;YAAA;UAAA,QADF;QASD,CAVD;MAFJ;QAAA;QAAA;QAAA;MAAA,QAPA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CAlDD;;GAAMrB,S;;KAAAA,S;AAoDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}