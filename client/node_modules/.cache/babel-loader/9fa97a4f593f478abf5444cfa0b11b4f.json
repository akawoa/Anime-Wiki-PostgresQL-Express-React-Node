{"ast":null,"code":"var _jsxFileName = \"/Users/gszm/anime_wiki/client/src/components/AllAnimeInGivenGenre.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { getAnimeInGenre } from \"../apis/AnimeFinder\";\nimport { AnimeContext } from \"../context/AnimeContext\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport MyLoader from \"./MyLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllAnimeInGivenGenre = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    anime,\n    setAnime\n  } = useContext(AnimeContext);\n  let history = useHistory();\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\"\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getAnimeInGenre(id);\n        setRequestStatus(REQUEST_STATUS.SUCCESS);\n        console.log(response.data.data);\n        setAnime(response.data.data.anime);\n      } catch (err) {\n        setRequestStatus(REQUEST_STATUS.FAILURE);\n      }\n    };\n\n    fetchData();\n  }, []);\n  if (requestStatus === REQUEST_STATUS.LOADING) return /*#__PURE__*/_jsxDEV(MyLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 56\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"list-group container\",\n    children: [\"All Anime In Given Genre\", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-active table-bordered table-striped table-hover table-dark table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-secondary text-warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"col-md-3-3 text-center border-light\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"col-md-3-3 text-center border-light\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"col-md-3-3 text-center border-light\",\n            children: \"Number of Episodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"col-md-3-3 text-center border-light\",\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: anime && anime.map(anime => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-active\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-md-3 text-center border-light\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/anime/${anime.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: anime.image,\n                  className: \"img-fluid rounded h-25 w-75 p-1 border border-warning bg-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-md-3 text-center border-light\",\n              children: anime.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-md-3 text-center border-light\",\n              children: anime.episodes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-md-3 text-center border-light\",\n              children: [\" \", anime.genre_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, anime.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllAnimeInGivenGenre, \"EHxrL8eaEoX6oH6NkHftPQFzvb0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AllAnimeInGivenGenre;\nexport default AllAnimeInGivenGenre;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllAnimeInGivenGenre\");","map":{"version":3,"names":["React","useEffect","useContext","useState","getAnimeInGenre","AnimeContext","useHistory","useParams","Link","MyLoader","AllAnimeInGivenGenre","props","id","anime","setAnime","history","REQUEST_STATUS","LOADING","SUCCESS","FAILURE","requestStatus","setRequestStatus","fetchData","response","console","log","data","err","map","image","name","episodes","genre_name"],"sources":["/Users/gszm/anime_wiki/client/src/components/AllAnimeInGivenGenre.jsx"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { getAnimeInGenre } from \"../apis/AnimeFinder\";\nimport { AnimeContext } from \"../context/AnimeContext\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport MyLoader from \"./MyLoader\";\n\nconst AllAnimeInGivenGenre = (props) => {\n    const { id } = useParams();\n  const { anime, setAnime } = useContext(AnimeContext);\n  let history = useHistory();\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\",\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getAnimeInGenre(id);\n        setRequestStatus(REQUEST_STATUS.SUCCESS);\n        console.log(response.data.data);\n        setAnime(response.data.data.anime);\n      } catch (err) {\n        setRequestStatus(REQUEST_STATUS.FAILURE);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (requestStatus === REQUEST_STATUS.LOADING) return <MyLoader></MyLoader>;\n\n  return (\n    <div class=\"list-group container\">\n        All Anime In Given Genre\n        <table className=\"table-active table-bordered table-striped table-hover table-dark table-sm\">\n        <thead>\n          <tr className=\"bg-secondary text-warning\">\n            <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">Image</th>\n            <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">Name</th>\n            <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">Number of Episodes</th>\n            <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">Genre</th>\n          </tr>\n        </thead>\n        <tbody>\n        {/* <Link to={`/anime/${genre.id}`}><img src={genre.genre_image} class=\"img-fluid rounded p-1 border border-warning bg-warning w-50\"></img></Link> */}\n          {anime &&\n            anime.map((anime) => {\n              return (\n                <tr\n                  key={anime.id}\n                  className=\"table-active\"\n                >\n                  <td className=\"col-md-3 text-center border-light\"><Link to={`/anime/${anime.id}`}><img src={anime.image} className=\"img-fluid rounded h-25 w-75 p-1 border border-warning bg-warning\"></img></Link></td>\n                  <td className=\"col-md-3 text-center border-light\">{anime.name}</td>\n                  <td className=\"col-md-3 text-center border-light\">{anime.episodes}</td>\n                  <td className=\"col-md-3 text-center border-light\"> {anime.genre_name}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n        </table>\n    </div>\n  );\n};\n\nexport default AllAnimeInGivenGenre;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}