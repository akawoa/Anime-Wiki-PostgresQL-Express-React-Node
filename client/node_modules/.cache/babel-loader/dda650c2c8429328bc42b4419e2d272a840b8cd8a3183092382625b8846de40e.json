{"ast":null,"code":"var _jsxFileName = \"/Users/gszm/anime_wiki/client/src/components/ShowPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { getSingleAnimeCall } from \"../apis/AnimeFinder\";\nimport { AnimeContext } from \"../context/AnimeContext\";\nimport { useHistory, useParams, Redirect } from \"react-router-dom\";\nimport MyLoader from \"./MyLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowPage = props => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    anime,\n    setAnime\n  } = useContext(AnimeContext);\n  const {\n    state,\n    setState\n  } = useState(false);\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\"\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n  const delay = () => {\n    return new Promise(resolve => setTimeout(resolve, 1000));\n  };\n  const fetchData = async () => {\n    try {\n      await delay();\n      const response = await getSingleAnimeCall(id);\n      setRequestStatus(REQUEST_STATUS.SUCCESS);\n      console.log(response.data.data.anime);\n      setAnime(response.data.data.anime);\n      setState(response.data.data.anime);\n    } catch (err) {\n      setRequestStatus(REQUEST_STATUS.FAILURE);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [state]);\n  if (requestStatus === REQUEST_STATUS.LOADING) return /*#__PURE__*/_jsxDEV(MyLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 56\n  }, this);\n  if (requestStatus === REQUEST_STATUS.FAILURE) /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 49\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    id: \"margin\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-active table-bordered table-striped table-hover table-dark table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-secondary text-warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"col-md-3-3 text-center border-light\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"col-md-3-3 text-center border-light\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"col-md-3-3 text-center border-light\",\n            children: \"Number of Episodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"col-md-3-3 text-center border-light\",\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: anime && anime.map(anime => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-active\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-md-3 text-center border-light\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: anime.image,\n                className: \"img-fluid rounded h-25 w-75 p-1 border border-warning bg-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-md-3 text-center border-light\",\n              children: anime.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-md-3 text-center border-light\",\n              children: anime.episodes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col-md-3 text-center border-light\",\n              children: [\" \", anime.year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, anime.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowPage, \"U3PQbTCN+/kEuJcqJZc8oUPPkIU=\", false, function () {\n  return [useParams];\n});\n_c = ShowPage;\nexport default ShowPage;\nvar _c;\n$RefreshReg$(_c, \"ShowPage\");","map":{"version":3,"names":["React","useEffect","useContext","useState","getSingleAnimeCall","AnimeContext","useHistory","useParams","Redirect","MyLoader","ShowPage","props","id","anime","setAnime","state","setState","REQUEST_STATUS","LOADING","SUCCESS","FAILURE","requestStatus","setRequestStatus","delay","Promise","resolve","setTimeout","fetchData","response","console","log","data","err","map","image","name","episodes","year"],"sources":["/Users/gszm/anime_wiki/client/src/components/ShowPage.jsx"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { getSingleAnimeCall } from \"../apis/AnimeFinder\";\nimport { AnimeContext } from \"../context/AnimeContext\";\nimport { useHistory, useParams, Redirect } from \"react-router-dom\";\nimport MyLoader from \"./MyLoader\";\n\nconst ShowPage = (props) => {\n  const { id } = useParams();\n  const { anime, setAnime } = useContext(AnimeContext);\n  const { state, setState } = useState(false);\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    FAILURE: \"failure\",\n  };\n  const [requestStatus, setRequestStatus] = useState(REQUEST_STATUS.LOADING);\n\n  const delay = () => {\n    return new Promise(resolve => setTimeout(resolve, 1000));\n  };\n  \n\n\n  const fetchData = async () => {\n    try {\n      await delay();\n      const response = await getSingleAnimeCall(id);\n      setRequestStatus(REQUEST_STATUS.SUCCESS);\n      console.log(response.data.data.anime);\n      setAnime(response.data.data.anime);\n      setState(response.data.data.anime);\n    } catch (err) {\n      setRequestStatus(REQUEST_STATUS.FAILURE);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [state]);\n\n  if (requestStatus === REQUEST_STATUS.LOADING) return <MyLoader></MyLoader>;\n  if (requestStatus === REQUEST_STATUS.FAILURE) <Redirect to=\"/error\" />;\n\n  return (\n    <div className=\"list-group\" id=\"margin\">\n        <table className=\"table-active table-bordered table-striped table-hover table-dark table-sm\">\n        <thead>\n          <tr className=\"bg-secondary text-warning\">\n            <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">Image</th>\n            <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">Name</th>\n            <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">Number of Episodes</th>\n            <th scope=\"col\" className=\"col-md-3-3 text-center border-light\">Year</th>\n          </tr>\n        </thead>\n        <tbody>\n          {anime &&\n            anime.map((anime) => {\n              return (\n                <tr\n                  key={anime.id}\n                  className=\"table-active\"\n                >\n                  <td className=\"col-md-3 text-center border-light\"><img src={anime.image} className=\"img-fluid rounded h-25 w-75 p-1 border border-warning bg-warning\"></img></td>\n                  <td className=\"col-md-3 text-center border-light\">{anime.name}</td>\n                  <td className=\"col-md-3 text-center border-light\">{anime.episodes}</td>\n                  <td className=\"col-md-3 text-center border-light\"> {anime.year}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n        </table>\n    </div>\n  );\n};\n\nexport default ShowPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}