{"ast":null,"code":"var _jsxFileName = \"/Users/gszm/anime_wiki/client/src/components/AddGenre.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useLocation, useParams, useHistory, Redirect } from \"react-router-dom\";\nimport { postGenreAPICall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddGenre = () => {\n  _s();\n\n  const {\n    addGenres\n  } = useContext(GenresContext);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory(); // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const response = await AnimeFinder.post(\"/\", {\n  //       name,\n  //       location,\n  //       price_range: priceRange,\n  //     });\n  //     console.log(response.data.data);\n  //     addAnime(response.data.data.anime);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n  //   CREATE TABLE IF NOT EXISTS public.genres\n  // (\n  //     id bigserial NOT NULL,\n  //     genre_name character varying(45),\n  //     genre_image text,\n  //     genre_description text,\n  //     created_at timestamp with time zone DEFAULT current_timestamp,\n  //     updated_at timestamp with time zone DEFAULT now(),\n  //     PRIMARY KEY (id)\n  // );\n  // CREATE TABLE IF NOT EXISTS public.anime\n  // (\n  //     id bigserial NOT NULL,\n  //     name character varying(255),\n  //     episodes integer,\n  //     image text,\n  //     year integer,\n  //     creator character varying(255),\n  //     genre_id bigint,\n  //     created_at timestamp with time zone DEFAULT current_timestamp,\n  //     updated_at timestamp with time zone DEFAULT now(),\n  //     PRIMARY KEY (id)\n  // );\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await postGenreAPICall({\n        name,\n        image,\n        description\n      });\n      console.log(response.data.data);\n      console.log(response.status);\n      addGenre(response.data.data.genres);\n\n      if (response.status === 201) {\n        history.push(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-weight-light text-left\",\n      children: \"Add an Anime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          role: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"Image Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: image,\n              onChange: e => setImage(e.target.value),\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            onChange: e => setDescription(e.target.value),\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Add Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 1\n  }, this);\n};\n\n_s(AddGenre, \"PVOEO9lGc45VMk0S+VBAYq50I+0=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddGenre;\nexport default AddGenre; // import React, { useState, useContext, useEffect } from \"react\";\n// import { Redirect, useHistory } from \"react-router-dom\";\n// import AnimeFinder, { getGenreCall, postAnimeAPICall } from \"../apis/AnimeFinder\";\n// import { AnimeContext } from \"../context/AnimeContext\";\n// import { GenresContext } from \"../context/GenreContext\";\n// const AddAnime = () => {\n//   const { addAnime } = useContext(AnimeContext);\n//   const [name, setName] = useState(\"\");\n//   const [episodes, setEpisodes] = useState();\n//   const [image, setImage] = useState(\"\");\n//   const [year, setYear] = useState();\n//   const [creator, setCreator] = useState(\"\");\n//   const [genreID, setGenreID] = useState();\n//   const { genres, setGenres } = useContext(GenresContext);\n//   const { state, setState } = useState(false);\n//   const { response, setResponse } = useState();\n//   const history = useHistory() \n//   const fetchData = async () => {\n//     try {\n//       const response = await getGenreCall();\n//       console.log(response.data.data);\n//       setGenres(response.data.data.genre);\n//       setState(response.data.data);\n//     } catch (err) {}\n//   };\n//   useEffect(() => {\n//     fetchData();\n//   }, [state]);\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postGenreAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addGenre(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await AnimeFinder.post(\"/\", {\n//       name,\n//       location,\n//       price_range: priceRange,\n//     });\n//     console.log(response.data.data);\n//     addAnime(response.data.data.restaurant);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n//   CREATE TABLE IF NOT EXISTS public.genres\n// (\n//     id bigserial NOT NULL,\n//     genre_name character varying(45),\n//     genre_image text,\n//     genre_description text,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n// CREATE TABLE IF NOT EXISTS public.anime\n// (\n//     id bigserial NOT NULL,\n//     name character varying(255),\n//     episodes integer,\n//     image text,\n//     year integer,\n//     creator character varying(255),\n//     genre_id bigint,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postAnimeAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addAnime(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/anime\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n//   return (\n// <div className=\"container-fluid\">\n//   <h3 className=\"font-weight-light text-left\">\n//   Add an Anime\n//   </h3>\n//   <div className=\"row\">\n//     <div className=\"col-md-12\">\n//       <form role=\"form\">\n//         <div className=\"form-group\">\n// <label htmlFor=\"name\">\n//             Name\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//             <label htmlFor=\"episodes\">\n//                         Number of Episodes\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={episodes}\n//                       onChange={(e) => setEpisodes(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"image\">\n//                         Image Link\n//                       </label>\n//                       <input\n//                       type=\"text\"\n//                       value={image}\n//                       onChange={(e) => setImage(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"year\">\n//                         Year\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={year}\n//                       onChange={(e) => setYear(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"creator\">\n//             Creator\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={creator}\n//           onChange={(e) => setCreator(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//         </div>\n//                 <div className=\"form-group\">\n//                 <label htmlFor=\"select_genre\">Genre</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id=\"genre\"\n//                   value={genreID}\n//                   onChange={(e) => setGenreID(e.target.value)}\n//                   >\n//                   <option value=\"\" disabled selected hidden>Choose a genre</option>\n//                 {genres &&\n//                   genres.map((genre) => {\n//                   return (\n//                     <option value={genre.id} key={genre.id}>{genre.genre_name}</option>\n//                   );\n//                 })}\n//                 </select>\n//         </div>\n// <div className=\"form-group\">\n// <label htmlFor=\"description\">\n//             Description\n//           </label>\n//           <textarea className=\"form-control\" rows=\"4\"></textarea>\n// </div>\n//         <button \n//         onClick={handleSubmit}\n//         type=\"submit\"\n//         className=\"btn btn-primary\">\n//           Add Anime\n//         </button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n// // /*\n//     <div className=\"mb-2\">\n//         Add Anime Component\n//     <div className=\"mb-2\">\n//         <div className=\"mb-4\">\n//       <form action=\"\">\n//         <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//                <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//     </div>\n//     </div>\n//     */\n//   );\n// };\n// export default AddAnime;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddGenre\");","map":{"version":3,"names":["React","useState","useContext","useLocation","useParams","useHistory","Redirect","postGenreAPICall","GenresContext","AddGenre","addGenres","name","setName","image","setImage","description","setDescription","history","handleSubmit","e","preventDefault","response","console","log","data","status","addGenre","genres","push","err","target","value"],"sources":["/Users/gszm/anime_wiki/client/src/components/AddGenre.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useLocation, useParams, useHistory, Redirect } from \"react-router-dom\";\nimport { postGenreAPICall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\n\nconst AddGenre = () => {\n  const { addGenres } = useContext(GenresContext);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory() \n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const response = await AnimeFinder.post(\"/\", {\n  //       name,\n  //       location,\n  //       price_range: priceRange,\n  //     });\n  //     console.log(response.data.data);\n  //     addAnime(response.data.data.anime);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n//   CREATE TABLE IF NOT EXISTS public.genres\n// (\n//     id bigserial NOT NULL,\n//     genre_name character varying(45),\n//     genre_image text,\n//     genre_description text,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// CREATE TABLE IF NOT EXISTS public.anime\n// (\n//     id bigserial NOT NULL,\n//     name character varying(255),\n//     episodes integer,\n//     image text,\n//     year integer,\n//     creator character varying(255),\n//     genre_id bigint,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  try {\n    const response = await postGenreAPICall({\n      name,\n      image,\n      description,\n    });\n    console.log(response.data.data);\n    console.log(response.status);\n    addGenre(response.data.data.genres);\n    if(response.status === 201) {\n      history.push(\"/\")\n    }\n  } catch (err) {\n    console.log(err);\n    <Redirect to=\"/error\" />\n  }\n};\n\n  return (\n\n<div className=\"container-fluid\">\n  <h3 className=\"font-weight-light text-left\">\n  Add an Anime\n  </h3>\n  <div className=\"row\">\n    <div className=\"col-md-12\">\n      <form role=\"form\">\n        <div className=\"form-group\">\n            \n<label htmlFor=\"name\">\n            Name\n          </label>\n          <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          className=\"form-control\" />\n        </div>\n                    <div className=\"form-group\">\n            <label htmlFor=\"image\">\n                        Image Link\n                      </label>\n                      <input\n                      type=\"text\"\n                      value={image}\n                      onChange={(e) => setImage(e.target.value)}\n                      className=\"form-control\" />\n                    </div>\n<div className=\"form-group\">\n<label htmlFor=\"description\">\n            Description\n          </label>\n          <textarea className=\"form-control\" rows=\"4\"></textarea>\n</div>\n        <button \n        onClick={handleSubmit}\n        onChange={(e) => setDescription(e.target.value)}\n        type=\"submit\"\n        className=\"btn btn-primary\">\n          Add Genre\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n  );\n};\n\nexport default AddGenre;\n\n// import React, { useState, useContext, useEffect } from \"react\";\n// import { Redirect, useHistory } from \"react-router-dom\";\n// import AnimeFinder, { getGenreCall, postAnimeAPICall } from \"../apis/AnimeFinder\";\n// import { AnimeContext } from \"../context/AnimeContext\";\n// import { GenresContext } from \"../context/GenreContext\";\n\n// const AddAnime = () => {\n//   const { addAnime } = useContext(AnimeContext);\n//   const [name, setName] = useState(\"\");\n//   const [episodes, setEpisodes] = useState();\n//   const [image, setImage] = useState(\"\");\n//   const [year, setYear] = useState();\n//   const [creator, setCreator] = useState(\"\");\n//   const [genreID, setGenreID] = useState();\n//   const { genres, setGenres } = useContext(GenresContext);\n//   const { state, setState } = useState(false);\n//   const { response, setResponse } = useState();\n//   const history = useHistory() \n\n//   const fetchData = async () => {\n//     try {\n//       const response = await getGenreCall();\n//       console.log(response.data.data);\n//       setGenres(response.data.data.genre);\n//       setState(response.data.data);\n//     } catch (err) {}\n//   };\n//   useEffect(() => {\n//     fetchData();\n//   }, [state]);\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postGenreAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addGenre(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const response = await AnimeFinder.post(\"/\", {\n  //       name,\n  //       location,\n  //       price_range: priceRange,\n  //     });\n  //     console.log(response.data.data);\n  //     addAnime(response.data.data.restaurant);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n  //   CREATE TABLE IF NOT EXISTS public.genres\n// (\n//     id bigserial NOT NULL,\n//     genre_name character varying(45),\n//     genre_image text,\n//     genre_description text,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// CREATE TABLE IF NOT EXISTS public.anime\n// (\n//     id bigserial NOT NULL,\n//     name character varying(255),\n//     episodes integer,\n//     image text,\n//     year integer,\n//     creator character varying(255),\n//     genre_id bigint,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postAnimeAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addAnime(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/anime\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n//   return (\n// <div className=\"container-fluid\">\n//   <h3 className=\"font-weight-light text-left\">\n//   Add an Anime\n//   </h3>\n//   <div className=\"row\">\n//     <div className=\"col-md-12\">\n//       <form role=\"form\">\n//         <div className=\"form-group\">\n            \n// <label htmlFor=\"name\">\n//             Name\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//             <label htmlFor=\"episodes\">\n//                         Number of Episodes\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={episodes}\n//                       onChange={(e) => setEpisodes(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"image\">\n//                         Image Link\n//                       </label>\n//                       <input\n//                       type=\"text\"\n//                       value={image}\n//                       onChange={(e) => setImage(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"year\">\n//                         Year\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={year}\n//                       onChange={(e) => setYear(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"creator\">\n//             Creator\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={creator}\n//           onChange={(e) => setCreator(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//         </div>\n//                 <div className=\"form-group\">\n//                 <label htmlFor=\"select_genre\">Genre</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id=\"genre\"\n//                   value={genreID}\n//                   onChange={(e) => setGenreID(e.target.value)}\n//                   >\n//                   <option value=\"\" disabled selected hidden>Choose a genre</option>\n//                 {genres &&\n//                   genres.map((genre) => {\n//                   return (\n//                     <option value={genre.id} key={genre.id}>{genre.genre_name}</option>\n//                   );\n//                 })}\n//                 </select>\n//         </div>\n// <div className=\"form-group\">\n// <label htmlFor=\"description\">\n//             Description\n//           </label>\n//           <textarea className=\"form-control\" rows=\"4\"></textarea>\n// </div>\n//         <button \n//         onClick={handleSubmit}\n//         type=\"submit\"\n//         className=\"btn btn-primary\">\n//           Add Anime\n//         </button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n// // /*\n//     <div className=\"mb-2\">\n//         Add Anime Component\n//     <div className=\"mb-2\">\n//         <div className=\"mb-4\">\n//       <form action=\"\">\n//         <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//                <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n\n//     </div>\n//     </div>\n//     */\n//   );\n// };\n\n// export default AddAnime;\n"],"mappings":"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},"metadata":{},"sourceType":"module"}