{"ast":null,"code":"var _jsxFileName = \"/Users/gszm/anime_wiki/client/src/components/AddGenre.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { postGenreAPICall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddGenre = () => {\n  _s();\n  const {\n    addGenres\n  } = useContext(GenresContext);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [genreNameError, setGenreNameError] = useState(\"\");\n  const [genreImageError, setGenreImageError] = useState(\"\");\n  const [genreDescriptionError, setGenreDescriptionError] = useState(\"\");\n  const history = useHistory();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await postGenreAPICall({\n        genre_name: name,\n        genre_image: image,\n        genre_description: description\n      });\n      console.log(response.data.data);\n      console.log(response.status);\n      addGenres(response.data.data.genres);\n      if (response.status === 201) {\n        history.push(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n      /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this);\n    }\n  };\n  const handleGenreName = e => {\n    setName(e.target.value);\n    if (e.target.value.length < 1) {\n      setGenreNameError(\"Genre Name is Required!\");\n    } else if (e.target.value.length < 2) {\n      setGenreNameError(\"Genre Name must be 2 characters or longer!\");\n    } else if (e.target.value.length >= 2) {\n      setGenreNameError(\"\");\n    }\n  };\n  const handleGenreImage = e => {\n    setImage(e.target.value);\n    if (e.target.value.toLowerCase().includes(\".com\") == false) {\n      setGenreImageError(\"Please enter a valid url!\");\n    } else if (e.target.value.toLowerCase().includes(\".com\") == true) {\n      setGenreImageError(\"\");\n    }\n  };\n  const handleGenreDescription = e => {\n    setDescription(e.target.value);\n    if (e.target.value.length < 1) {\n      setGenreDescriptionError(\"Genre Description is Required!\");\n    } else if (e.target.value.length < 2) {\n      setGenreDescriptionError(\"Genre Description must be 2 characters or longer!\");\n    } else if (e.target.value.length >= 2) {\n      setGenreDescriptionError(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-weight-light text-left\",\n      children: \"Add an Anime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          role: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: name,\n              onChange: handleGenreName,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: genreNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"Image Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: image,\n              onChange: handleGenreImage,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: genreImageError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              onChange: handleGenreDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Add Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: genreDescriptionError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AddGenre, \"2lj8/plUii5J1oNtqMKjuN5zgkM=\", false, function () {\n  return [useHistory];\n});\n_c = AddGenre;\nexport default AddGenre;\n\n// import React, { useState, useContext, useEffect } from \"react\";\n// import { Redirect, useHistory } from \"react-router-dom\";\n// import AnimeFinder, { getGenreCall, postAnimeAPICall } from \"../apis/AnimeFinder\";\n// import { AnimeContext } from \"../context/AnimeContext\";\n// import { GenresContext } from \"../context/GenreContext\";\n\n// const AddAnime = () => {\n//   const { addAnime } = useContext(AnimeContext);\n//   const [name, setName] = useState(\"\");\n//   const [episodes, setEpisodes] = useState();\n//   const [image, setImage] = useState(\"\");\n//   const [year, setYear] = useState();\n//   const [creator, setCreator] = useState(\"\");\n//   const [genreID, setGenreID] = useState();\n//   const { genres, setGenres } = useContext(GenresContext);\n//   const { state, setState } = useState(false);\n//   const { response, setResponse } = useState();\n//   const history = useHistory()\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await getGenreCall();\n//       console.log(response.data.data);\n//       setGenres(response.data.data.genre);\n//       setState(response.data.data);\n//     } catch (err) {}\n//   };\n//   useEffect(() => {\n//     fetchData();\n//   }, [state]);\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postGenreAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addGenre(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await AnimeFinder.post(\"/\", {\n//       name,\n//       location,\n//       price_range: priceRange,\n//     });\n//     console.log(response.data.data);\n//     addAnime(response.data.data.restaurant);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n//   CREATE TABLE IF NOT EXISTS public.genres\n// (\n//     id bigserial NOT NULL,\n//     genre_name character varying(45),\n//     genre_image text,\n//     genre_description text,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// CREATE TABLE IF NOT EXISTS public.anime\n// (\n//     id bigserial NOT NULL,\n//     name character varying(255),\n//     episodes integer,\n//     image text,\n//     year integer,\n//     creator character varying(255),\n//     genre_id bigint,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postAnimeAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addAnime(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/anime\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n//   return (\n// <div className=\"container-fluid\">\n//   <h3 className=\"font-weight-light text-left\">\n//   Add an Anime\n//   </h3>\n//   <div className=\"row\">\n//     <div className=\"col-md-12\">\n//       <form role=\"form\">\n//         <div className=\"form-group\">\n\n// <label htmlFor=\"name\">\n//             Name\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//             <label htmlFor=\"episodes\">\n//                         Number of Episodes\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={episodes}\n//                       onChange={(e) => setEpisodes(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"image\">\n//                         Image Link\n//                       </label>\n//                       <input\n//                       type=\"text\"\n//                       value={image}\n//                       onChange={(e) => setImage(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"year\">\n//                         Year\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={year}\n//                       onChange={(e) => setYear(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"creator\">\n//             Creator\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={creator}\n//           onChange={(e) => setCreator(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//         </div>\n//                 <div className=\"form-group\">\n//                 <label htmlFor=\"select_genre\">Genre</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id=\"genre\"\n//                   value={genreID}\n//                   onChange={(e) => setGenreID(e.target.value)}\n//                   >\n//                   <option value=\"\" disabled selected hidden>Choose a genre</option>\n//                 {genres &&\n//                   genres.map((genre) => {\n//                   return (\n//                     <option value={genre.id} key={genre.id}>{genre.genre_name}</option>\n//                   );\n//                 })}\n//                 </select>\n//         </div>\n// <div className=\"form-group\">\n// <label htmlFor=\"description\">\n//             Description\n//           </label>\n//           <textarea className=\"form-control\" rows=\"4\"></textarea>\n// </div>\n//         <button\n//         onClick={handleSubmit}\n//         type=\"submit\"\n//         className=\"btn btn-primary\">\n//           Add Anime\n//         </button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n// // /*\n//     <div className=\"mb-2\">\n//         Add Anime Component\n//     <div className=\"mb-2\">\n//         <div className=\"mb-4\">\n//       <form action=\"\">\n//         <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//                <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n\n//     </div>\n//     </div>\n//     */\n//   );\n// };\n\n// export default AddAnime;\nvar _c;\n$RefreshReg$(_c, \"AddGenre\");","map":{"version":3,"names":["React","useState","useContext","useHistory","Redirect","postGenreAPICall","GenresContext","AddGenre","addGenres","name","setName","image","setImage","description","setDescription","genreNameError","setGenreNameError","genreImageError","setGenreImageError","genreDescriptionError","setGenreDescriptionError","history","handleSubmit","e","preventDefault","response","genre_name","genre_image","genre_description","console","log","data","status","genres","push","err","handleGenreName","target","value","length","handleGenreImage","toLowerCase","includes","handleGenreDescription"],"sources":["/Users/gszm/anime_wiki/client/src/components/AddGenre.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { postGenreAPICall } from \"../apis/AnimeFinder\";\nimport { GenresContext } from \"../context/GenreContext\";\n\nconst AddGenre = () => {\n  const { addGenres } = useContext(GenresContext);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [genreNameError, setGenreNameError] = useState(\"\");\n  const [genreImageError, setGenreImageError] = useState(\"\");\n  const [genreDescriptionError, setGenreDescriptionError] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await postGenreAPICall({\n        genre_name: name,\n        genre_image: image,\n        genre_description: description,\n      });\n      console.log(response.data.data);\n      console.log(response.status);\n      addGenres(response.data.data.genres);\n      if (response.status === 201) {\n        history.push(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n      <Redirect to=\"/error\" />;\n    }\n  };\n\n  const handleGenreName = (e) => {\n    setName(e.target.value);\n    if (e.target.value.length < 1) {\n      setGenreNameError(\"Genre Name is Required!\");\n    } else if (e.target.value.length < 2) {\n      setGenreNameError(\"Genre Name must be 2 characters or longer!\");\n    } else if (e.target.value.length >= 2) {\n      setGenreNameError(\"\");\n    }\n  };\n\n  const handleGenreImage = (e) => {\n    setImage(e.target.value);\n    if (e.target.value.toLowerCase().includes(\".com\") == false ) {\n      setGenreImageError(\"Please enter a valid url!\");\n    } else if (e.target.value.toLowerCase().includes(\".com\") == true ) {\n      setGenreImageError(\"\");\n    }\n  };\n\n    const handleGenreDescription = (e) => {\n    setDescription(e.target.value);\n    if (e.target.value.length < 1) {\n      setGenreDescriptionError(\"Genre Description is Required!\");\n    } else if (e.target.value.length < 2) {\n      setGenreDescriptionError(\"Genre Description must be 2 characters or longer!\");\n    } else if (e.target.value.length >= 2) {\n      setGenreDescriptionError(\"\");\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"font-weight-light text-left\">Add an Anime</h3>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <form role=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                value={name}\n                onChange={handleGenreName}\n                className=\"form-control\"\n              />\n            </div>\n            <span className=\"text-danger\">{genreNameError}</span>\n            <div className=\"form-group\">\n              <label htmlFor=\"image\">Image Link</label>\n              <input\n                type=\"text\"\n                value={image}\n                onChange={handleGenreImage}\n                className=\"form-control\"\n              />\n              <span className=\"text-danger\">{genreImageError}</span>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                className=\"form-control\"\n                rows=\"4\"\n                onChange={handleGenreDescription}\n              ></textarea>\n            </div>\n            <button\n              onClick={handleSubmit}\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Add Genre\n            </button>\n            <span className=\"text-danger\">{genreDescriptionError}</span>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddGenre;\n\n// import React, { useState, useContext, useEffect } from \"react\";\n// import { Redirect, useHistory } from \"react-router-dom\";\n// import AnimeFinder, { getGenreCall, postAnimeAPICall } from \"../apis/AnimeFinder\";\n// import { AnimeContext } from \"../context/AnimeContext\";\n// import { GenresContext } from \"../context/GenreContext\";\n\n// const AddAnime = () => {\n//   const { addAnime } = useContext(AnimeContext);\n//   const [name, setName] = useState(\"\");\n//   const [episodes, setEpisodes] = useState();\n//   const [image, setImage] = useState(\"\");\n//   const [year, setYear] = useState();\n//   const [creator, setCreator] = useState(\"\");\n//   const [genreID, setGenreID] = useState();\n//   const { genres, setGenres } = useContext(GenresContext);\n//   const { state, setState } = useState(false);\n//   const { response, setResponse } = useState();\n//   const history = useHistory()\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await getGenreCall();\n//       console.log(response.data.data);\n//       setGenres(response.data.data.genre);\n//       setState(response.data.data);\n//     } catch (err) {}\n//   };\n//   useEffect(() => {\n//     fetchData();\n//   }, [state]);\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postGenreAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addGenre(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await AnimeFinder.post(\"/\", {\n//       name,\n//       location,\n//       price_range: priceRange,\n//     });\n//     console.log(response.data.data);\n//     addAnime(response.data.data.restaurant);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n//   CREATE TABLE IF NOT EXISTS public.genres\n// (\n//     id bigserial NOT NULL,\n//     genre_name character varying(45),\n//     genre_image text,\n//     genre_description text,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// CREATE TABLE IF NOT EXISTS public.anime\n// (\n//     id bigserial NOT NULL,\n//     name character varying(255),\n//     episodes integer,\n//     image text,\n//     year integer,\n//     creator character varying(255),\n//     genre_id bigint,\n//     created_at timestamp with time zone DEFAULT current_timestamp,\n//     updated_at timestamp with time zone DEFAULT now(),\n//     PRIMARY KEY (id)\n// );\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   try {\n//     const response = await postAnimeAPICall({\n//       name,\n//       episodes,\n//       image,\n//       year,\n//       creator,\n//       genre_id: genreID\n//     });\n//     console.log(response.data.data);\n//     console.log(response.status);\n//     addAnime(response.data.data.anime);\n//     if(response.status === 201) {\n//       console.log('The response is equal to 201');\n//       history.push(\"/anime\")\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     <Redirect to=\"/error\" />\n//   }\n// };\n//   return (\n// <div className=\"container-fluid\">\n//   <h3 className=\"font-weight-light text-left\">\n//   Add an Anime\n//   </h3>\n//   <div className=\"row\">\n//     <div className=\"col-md-12\">\n//       <form role=\"form\">\n//         <div className=\"form-group\">\n\n// <label htmlFor=\"name\">\n//             Name\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//             <label htmlFor=\"episodes\">\n//                         Number of Episodes\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={episodes}\n//                       onChange={(e) => setEpisodes(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"image\">\n//                         Image Link\n//                       </label>\n//                       <input\n//                       type=\"text\"\n//                       value={image}\n//                       onChange={(e) => setImage(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//                     <div className=\"form-group\">\n//             <label htmlFor=\"year\">\n//                         Year\n//                       </label>\n//                       <input\n//                       type=\"number\"\n//                       value={year}\n//                       onChange={(e) => setYear(e.target.value)}\n//                       className=\"form-control\" />\n//                     </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"creator\">\n//             Creator\n//           </label>\n//           <input\n//           type=\"text\"\n//           value={creator}\n//           onChange={(e) => setCreator(e.target.value)}\n//           className=\"form-control\" />\n//         </div>\n//         <div className=\"form-group\">\n//         </div>\n//                 <div className=\"form-group\">\n//                 <label htmlFor=\"select_genre\">Genre</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id=\"genre\"\n//                   value={genreID}\n//                   onChange={(e) => setGenreID(e.target.value)}\n//                   >\n//                   <option value=\"\" disabled selected hidden>Choose a genre</option>\n//                 {genres &&\n//                   genres.map((genre) => {\n//                   return (\n//                     <option value={genre.id} key={genre.id}>{genre.genre_name}</option>\n//                   );\n//                 })}\n//                 </select>\n//         </div>\n// <div className=\"form-group\">\n// <label htmlFor=\"description\">\n//             Description\n//           </label>\n//           <textarea className=\"form-control\" rows=\"4\"></textarea>\n// </div>\n//         <button\n//         onClick={handleSubmit}\n//         type=\"submit\"\n//         className=\"btn btn-primary\">\n//           Add Anime\n//         </button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n// // /*\n//     <div className=\"mb-2\">\n//         Add Anime Component\n//     <div className=\"mb-2\">\n//         <div className=\"mb-4\">\n//       <form action=\"\">\n//         <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//                <div className=\"form-row\">\n//           <div className=\"col\">\n//             <input\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               placeholder=\"name\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <input\n//               value={location}\n//               onChange={(e) => setLocation(e.target.value)}\n//               className=\"form-control\"\n//               type=\"text\"\n//               placeholder=\"location\"\n//             />\n//           </div>\n//           <div className=\"col\">\n//             <select\n//               value={priceRange}\n//               onChange={(e) => setPriceRange(e.target.value)}\n//               className=\"custom-select my-1 mr-sm-2\"\n//             >\n//               <option disabled>Price Range</option>\n//               <option value=\"1\">$</option>\n//               <option value=\"2\">$$</option>\n//               <option value=\"3\">$$$</option>\n//               <option value=\"4\">$$$$</option>\n//               <option value=\"5\">$$$$$</option>\n//             </select>\n//           </div>\n//           <button\n//             onClick={handleSubmit}\n//             type=\"submit\"\n//             className=\"btn btn-primary\"\n//           >\n//             Add\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n\n//     </div>\n//     </div>\n//     */\n//   );\n// };\n\n// export default AddAnime;\n"],"mappings":"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AA,QAGpB,eACT;YAAM,SAAS,EAAC,aAAa;YAAA,UAAEH;UAAqB;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA;MACvD;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA5GIZ,QAAQ;EAAA,QAQIJ,UAAU;AAAA;AAAA,KARtBI,QAAQ;AA8Gd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}