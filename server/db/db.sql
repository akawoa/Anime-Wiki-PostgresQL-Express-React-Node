-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.genres
(
    id bigserial NOT NULL,
    name character varying(45),
    created_at timestamp with time zone NULL default current_timestamp,
    updated_at timestamp with time zone NULL default now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.anime
(
    id bigserial NOT NULL,
    name character varying(255),
    episodes integer,
    image text,
    year integer,
    creator character varying(255),
    genre_id INT NOT NULL,
    created_at timestamp with time zone NULL default current_timestamp,
    updated_at timestamp with time zone NULL default now(),
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.anime
    ADD FOREIGN KEY (genre_id)
    REFERENCES public.genres (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;



-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.genres
(
    id bigserial NOT NULL,
    name character varying(45),
    created_at timestamp with time zone DEFAULT current_timestamp,
    updated_at timestamp with time zone DEFAULT now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.anime
(
    id bigserial NOT NULL,
    name character varying(255),
    episodes integer,
    image text,
    year integer,
    creator character varying(255),
    genre_id bigint,
    created_at timestamp with time zone DEFAULT current_timestamp,
    updated_at timestamp with time zone DEFAULT now(),
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.anime
    ADD CONSTRAINT genre_id FOREIGN KEY (genre_id)
    REFERENCES public.genres (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
    -- -----------------------------------------------------
-- Schema dojos_and_ninjas
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `dojos_and_ninjas` ;

-- -----------------------------------------------------
-- Schema dojos_and_ninjas
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dojos_and_ninjas` DEFAULT CHARACTER SET utf8 ;
USE `dojos_and_ninjas` ;

-- -----------------------------------------------------
-- Table `dojos_and_ninjas`.`dojos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dojos_and_ninjas`.`dojos` ;

CREATE TABLE IF NOT EXISTS `dojos_and_ninjas`.`dojos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `created_at` DATETIME NULL default current_timestamp,
  `updated_at` DATETIME NULL default now(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dojos_and_ninjas`.`ninjas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dojos_and_ninjas`.`ninjas` ;

CREATE TABLE IF NOT EXISTS `dojos_and_ninjas`.`ninjas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `age` INT NULL,
  `image` VARCHAR(255) NULL,
  `dojo_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_ninjas_dojos_idx` (`dojo_id` ASC) VISIBLE,
  CONSTRAINT `fk_ninjas_dojos`
    FOREIGN KEY (`dojo_id`)
    REFERENCES `dojos_and_ninjas`.`dojos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)

-- -----------------------------------------------------
-- genres
-- -----------------------------------------------------

INSERT INTO genres(name)
VALUES ('Fantasy');

-- -----------------------------------------------------
-- anime
-- -----------------------------------------------------

INSERT INTO anime(name, episodes, image, year, creator,genre_id)
VALUES (1,'Gurren Lagann',27,'https://cdn.myanimelist.net/images/anime/7/6425l.jpg',2007,'Hiroyuki Imaishi',1);

select * 
from anime
INNER JOIN genres ON anime.genre_id= genres.id